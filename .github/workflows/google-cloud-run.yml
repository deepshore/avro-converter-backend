name: Google Cloud Run Java CD
on: [push, pull_request]

env:
  GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  APPLICATION_NAME: xsd2avro
  GCLOUD_IMAGE_REPOSITORY: xsd2avro
  GCLOUD_REGION: europe-west3
  GCLOUD_GCR: eu.gcr.io
  GCLOUD_PKG_LOCATION: europe-west3-docker.pkg.dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-test-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-test-
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Setup Google Cloud CLI
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'
      - name: Docker Login
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        run: |
          gcloud auth configure-docker europe-west3-docker.pkg.dev
      - name: Build for verification
        if: github.ref != 'refs/heads/main'
        env:
          GH_DEPLOY_USERNAME: ${{ env.GITHUB_REPOSITORY_OWNER }}
          GH_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TESTCONTAINERS_RYUK_DISABLED: true
        run: ./gradlew check --no-daemon
      - name: Build And Push Docker Image
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        env:
          GCLOUD_IMAGE_REPOSITORY: ${{ secrets.GCLOUD_IMAGE_REPOSITORY }}
          TESTCONTAINERS_RYUK_DISABLED: true
          GH_DEPLOY_USERNAME: ${{ env.GITHUB_REPOSITORY_OWNER }}
          GH_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export DOCKER_IMAGE=${{ env.GCLOUD_PKG_LOCATION }}/${{ env.GCLOUD_PROJECT_ID }}/${{ env.GCLOUD_IMAGE_REPOSITORY }}/${{ env.APPLICATION_NAME }}:${{ github.sha }}
          ./gradlew check assembleDist dockerPush --no-daemon
      - name: Deploy Cloud Run
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        run: |
          export DOCKER_IMAGE="${{ env.GCLOUD_PKG_LOCATION }}/${{ env.GCLOUD_PROJECT_ID }}/${{ env.GCLOUD_IMAGE_REPOSITORY }}/${{ env.APPLICATION_NAME }}:${{ github.sha }}"
          gcloud run deploy xsd2avro --quiet \
            --image "${DOCKER_IMAGE}" --project "${GCLOUD_PROJECT_ID}" \
            --memory "1Gi" \
            --region "${GCLOUD_REGION}" --platform managed --allow-unauthenticated --format json
          echo "Invoke endpoint:"
          gcloud run services list --platform managed --format json | jq -r \
            '.[] | select(.metadata.name == "google-cloud-run-maven-test") | .status.address.url'
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: build/distributions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
