name: Google Cloud Run Java CD
on: [push, pull_request]

env:
  GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GCLOUD_REGION: europe-west3
  GCLOUD_GCR: eu.gcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-test-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-test-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Google Cloud CLI
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
      - name: Docker Login
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud auth configure-docker
      - name: Build And Push Docker Image
        if: github.ref != 'refs/heads/main'
        env:
          GH_DEPLOY_USERNAME: ${{ env.GITHUB_REPOSITORY_OWNER }}
          GH_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TESTCONTAINERS_RYUK_DISABLED: true
        run: ./gradlew check --no-daemon
      - name: Build And Push Docker Image
        if: github.ref == 'refs/heads/main'
        env:
          GCLOUD_IMAGE_REPOSITORY: ${{ secrets.GCLOUD_IMAGE_REPOSITORY }}
          TESTCONTAINERS_RYUK_DISABLED: true
          GH_DEPLOY_USERNAME: ${{ env.GITHUB_REPOSITORY_OWNER }}
          GH_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export DOCKER_IMAGE=`echo "${GCLOUD_GCR}/${GCLOUD_PROJECT_ID}/${GCLOUD_IMAGE_REPOSITORY}/xsd2avro" | sed -e 's#//#/#' -e 's#^/##'`
          ./gradlew check assembleDist dockerPush --no-daemon
      - name: Deploy Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          DOCKER_IMAGE_REPOSITORY=$(docker images --format "{{.Repository}}" | grep xsd2avro)
          DOCKER_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" "${DOCKER_IMAGE_REPOSITORY}" )

          gcloud run deploy xsd2avro --quiet \
            --image "${DOCKER_IMAGE}" --project "${GCLOUD_PROJECT_ID}" \
            --memory "1Gi" \
            --region "${GCLOUD_REGION}" --platform managed --allow-unauthenticated --format json
          echo "Invoke endpoint:"
          gcloud run services list --platform managed --format json | jq -r \
            '.[] | select(.metadata.name == "google-cloud-run-maven-test") | .status.address.url'
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: github.ref == 'refs/heads/main'
        env:
          GHR_PATH: build/distributions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
