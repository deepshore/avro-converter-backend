(this["webpackJsonpxsd-to-avro-converter"]=this["webpackJsonpxsd-to-avro-converter"]||[]).push([[0],{115:function(e,t,s){"use strict";s.r(t);var n=s(0),r=s(73),c=s.n(r),a=s(58),i=s(2),o=s(81),j=s(126),l=s(127),d=s(137),b=s(129),h=s(130),u=s(74),x=s.n(u),m=s(24),O=s(128),p=s(138),v=s(136),g=s(6);function f(){var e=Object(o.a)(),t=e.handleSubmit,s=e.register,r=e.formState,c=r.errors,u=r.isSubmitting,f=Object(n.useState)(),S=Object(i.a)(f,2),y=S[0],w=S[1],C=Object(j.a)(y),k=C.hasCopied,q=C.onCopy;return Object(g.jsxs)(l.a,{children:[Object(g.jsxs)("form",{onSubmit:t((function(e){return new Promise((function(t){x.a.post("".concat("https://xsd2avro-3bsvapjrjq-ey.a.run.app/xsd2avro","/connect/xsd"),e,{validateStatus:function(){return!0}}).then((function(e){var s=JSON.stringify(e.data[1],null,2);console.log(s),w(s),t()}))}))})),children:[Object(g.jsxs)(m.a,{isInvalid:c.name,children:[Object(g.jsx)(O.a,{htmlFor:"xsd",children:"XSD"}),Object(g.jsx)(d.a,Object(a.a)({id:"xsd",placeholder:"paste xsd content here"},s("xsd",{required:"This is required",minLength:{value:20,message:"Minimum length should be 4"}}))),Object(g.jsx)(O.a,{htmlFor:"xml",children:"XML"}),Object(g.jsx)(d.a,Object(a.a)({id:"xml",placeholder:"paste xml with example data according to xsd here"},s("xml",{required:"This is required",minLength:{value:4,message:"Minimum length should be 4"}}))),Object(g.jsx)(p.a,{children:c.name&&c.name.message})]}),Object(g.jsx)(v.a,{mt:4,colorScheme:"yellow",isLoading:u,type:"submit",children:"Submit"})]}),Object(g.jsx)("br",{}),Object(g.jsx)(b.a,{fontSize:"lg",children:"Avro"}),Object(g.jsxs)(h.a,{mb:2,children:[Object(g.jsx)(d.a,{placeholder:"Your avro schema will be shown here after pressing submit.",size:"sm",isReadOnly:!0,value:y}),Object(g.jsx)(v.a,{onClick:q,ml:2,children:k?"Copied":"Copy"})]})]})}var S=s(134),y=s(131),w=s(132),C=s(133);function k(){return Object(g.jsxs)(S.a,{children:[Object(g.jsx)(y.a,{}),Object(g.jsxs)(l.a,{p:4,children:[Object(g.jsx)(w.a,{children:"XSD to Avro Converter"}),Object(g.jsxs)(b.a,{children:["Based on"," ",Object(g.jsx)(C.a,{children:"https://github.com/jcustenborder/xjc-kafka-connect-plugin"})]}),Object(g.jsx)("br",{}),Object(g.jsx)(f,{})]})]})}var q=document.getElementById("root");c.a.render(Object(g.jsx)(k,{}),q)}},[[115,1,2]]]);
//# sourceMappingURL=main.a4e869f5.chunk.js.map